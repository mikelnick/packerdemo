---
 - name: Stop RabbitMQ Service
   command: rabbitmqctl stop_app
   when: groups['tag_Name_' + ENV_NAME + '_rabbitmq'] is defined and inventory_hostname in groups['tag_Name_' + ENV_NAME + '_rabbitmq'][0] and rabbitmq_clustering == true  

 - name: Reset RabbitMQ Service
   command: rabbitmqctl reset
   when: groups['tag_Name_' + ENV_NAME + '_rabbitmq'] is defined and inventory_hostname in groups['tag_Name_' + ENV_NAME + '_rabbitmq'][0] and rabbitmq_clustering == true

 - name: Stop RabbitMQ-server
   service: name=rabbitmq-server state=stopped
   when: groups['tag_Name_' + ENV_NAME + '_rabbitmq'] is defined and inventory_hostname in groups['tag_Name_' + ENV_NAME + '_rabbitmq'][0] and rabbitmq_clustering == true

 - name: Copy Erlang Cookie
   template: src=erlang.cookie.j2 dest=/var/lib/rabbitmq/.erlang.cookie owner=rabbitmq group=rabbitmq mode=0400 backup=yes
   when: groups['tag_Name_' + ENV_NAME + '_rabbitmq'] is defined and inventory_hostname in groups['tag_Name_' + ENV_NAME + '_rabbitmq'][0] and rabbitmq_clustering == true

 - name: Restart RabbitMQ-server Master
   service: name=rabbitmq-server state=restarted
   when: groups['tag_Name_' + ENV_NAME + '_rabbitmq'] is defined and inventory_hostname in groups['tag_Name_' + ENV_NAME + '_rabbitmq'][0] and rabbitmq_clustering == true
 
 - name: RestartMQ Service
   command: rabbitmqctl start_app
   when: groups['tag_Name_' + ENV_NAME + '_rabbitmq'] is defined and inventory_hostname in groups['tag_Name_' + ENV_NAME + '_rabbitmq'][0] and rabbitmq_clustering == true
   register: CLUSTER_MASTER

